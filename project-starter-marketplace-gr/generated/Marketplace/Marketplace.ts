// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Acceptbidandmint extends ethereum.Event {
  get params(): Acceptbidandmint__Params {
    return new Acceptbidandmint__Params(this);
  }
}

export class Acceptbidandmint__Params {
  _event: Acceptbidandmint;

  constructor(event: Acceptbidandmint) {
    this._event = event;
  }

  get _seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get uri(): string {
    return this._event.parameters[3].value.toString();
  }

  get mintIndex(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get v(): i32 {
    return this._event.parameters[6].value.toI32();
  }

  get r(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }

  get s(): Bytes {
    return this._event.parameters[8].value.toBytes();
  }

  get contractAddress(): Address {
    return this._event.parameters[9].value.toAddress();
  }
}

export class Acceptbidandtransfer extends ethereum.Event {
  get params(): Acceptbidandtransfer__Params {
    return new Acceptbidandtransfer__Params(this);
  }
}

export class Acceptbidandtransfer__Params {
  _event: Acceptbidandtransfer;

  constructor(event: Acceptbidandtransfer) {
    this._event = event;
  }

  get _seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get v(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get r(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get s(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }

  get contractAddress(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class Buyandmint extends ethereum.Event {
  get params(): Buyandmint__Params {
    return new Buyandmint__Params(this);
  }
}

export class Buyandmint__Params {
  _event: Buyandmint;

  constructor(event: Buyandmint) {
    this._event = event;
  }

  get _seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get uri(): string {
    return this._event.parameters[3].value.toString();
  }

  get mintIndex(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get v(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get r(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get s(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }

  get contractAddress(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class Buyandtransfer extends ethereum.Event {
  get params(): Buyandtransfer__Params {
    return new Buyandtransfer__Params(this);
  }
}

export class Buyandtransfer__Params {
  _event: Buyandtransfer;

  constructor(event: Buyandtransfer) {
    this._event = event;
  }

  get _seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get v(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get r(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }

  get s(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get contractAddress(): Address {
    return this._event.parameters[7].value.toAddress();
  }
}

export class Offerandmint extends ethereum.Event {
  get params(): Offerandmint__Params {
    return new Offerandmint__Params(this);
  }
}

export class Offerandmint__Params {
  _event: Offerandmint;

  constructor(event: Offerandmint) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get uri(): string {
    return this._event.parameters[3].value.toString();
  }

  get mintIndex(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get v(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get r(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get s(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }

  get contractAddress(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class Offerandtransfer extends ethereum.Event {
  get params(): Offerandtransfer__Params {
    return new Offerandtransfer__Params(this);
  }
}

export class Offerandtransfer__Params {
  _event: Offerandtransfer;

  constructor(event: Offerandtransfer) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get v(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get r(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }

  get s(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get contractAddress(): Address {
    return this._event.parameters[7].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Withdrawstoredinaccount extends ethereum.Event {
  get params(): Withdrawstoredinaccount__Params {
    return new Withdrawstoredinaccount__Params(this);
  }
}

export class Withdrawstoredinaccount__Params {
  _event: Withdrawstoredinaccount;

  constructor(event: Withdrawstoredinaccount) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Marketplace extends ethereum.SmartContract {
  static bind(address: Address): Marketplace {
    return new Marketplace("Marketplace", address);
  }

  feeWallet(): Address {
    let result = super.call("feeWallet", "feeWallet():(address)", []);

    return result[0].toAddress();
  }

  try_feeWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeWallet", "feeWallet():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerWalletAddress(): Address {
    let result = super.call(
      "ownerWalletAddress",
      "ownerWalletAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_ownerWalletAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ownerWalletAddress",
      "ownerWalletAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  platformFee(): BigInt {
    let result = super.call("platformFee", "platformFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_platformFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("platformFee", "platformFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  storeFrontMaster(): Address {
    let result = super.call(
      "storeFrontMaster",
      "storeFrontMaster():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_storeFrontMaster(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "storeFrontMaster",
      "storeFrontMaster():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptBidAndMintCall extends ethereum.Call {
  get inputs(): AcceptBidAndMintCall__Inputs {
    return new AcceptBidAndMintCall__Inputs(this);
  }

  get outputs(): AcceptBidAndMintCall__Outputs {
    return new AcceptBidAndMintCall__Outputs(this);
  }
}

export class AcceptBidAndMintCall__Inputs {
  _call: AcceptBidAndMintCall;

  constructor(call: AcceptBidAndMintCall) {
    this._call = call;
  }

  get _seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get uri(): string {
    return this._call.inputValues[3].value.toString();
  }

  get mintIndex(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[6].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }

  get contractAddress(): Address {
    return this._call.inputValues[9].value.toAddress();
  }
}

export class AcceptBidAndMintCall__Outputs {
  _call: AcceptBidAndMintCall;

  constructor(call: AcceptBidAndMintCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AcceptBidAndTransferCall extends ethereum.Call {
  get inputs(): AcceptBidAndTransferCall__Inputs {
    return new AcceptBidAndTransferCall__Inputs(this);
  }

  get outputs(): AcceptBidAndTransferCall__Outputs {
    return new AcceptBidAndTransferCall__Outputs(this);
  }
}

export class AcceptBidAndTransferCall__Inputs {
  _call: AcceptBidAndTransferCall;

  constructor(call: AcceptBidAndTransferCall) {
    this._call = call;
  }

  get _seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }

  get contractAddress(): Address {
    return this._call.inputValues[8].value.toAddress();
  }
}

export class AcceptBidAndTransferCall__Outputs {
  _call: AcceptBidAndTransferCall;

  constructor(call: AcceptBidAndTransferCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BuyAndMintCall extends ethereum.Call {
  get inputs(): BuyAndMintCall__Inputs {
    return new BuyAndMintCall__Inputs(this);
  }

  get outputs(): BuyAndMintCall__Outputs {
    return new BuyAndMintCall__Outputs(this);
  }
}

export class BuyAndMintCall__Inputs {
  _call: BuyAndMintCall;

  constructor(call: BuyAndMintCall) {
    this._call = call;
  }

  get _seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _buyer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get uri(): string {
    return this._call.inputValues[3].value.toString();
  }

  get mintIndex(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }

  get contractAddress(): Address {
    return this._call.inputValues[8].value.toAddress();
  }
}

export class BuyAndMintCall__Outputs {
  _call: BuyAndMintCall;

  constructor(call: BuyAndMintCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BuyAndTransferCall extends ethereum.Call {
  get inputs(): BuyAndTransferCall__Inputs {
    return new BuyAndTransferCall__Inputs(this);
  }

  get outputs(): BuyAndTransferCall__Outputs {
    return new BuyAndTransferCall__Outputs(this);
  }
}

export class BuyAndTransferCall__Inputs {
  _call: BuyAndTransferCall;

  constructor(call: BuyAndTransferCall) {
    this._call = call;
  }

  get _seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _buyer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get contractAddress(): Address {
    return this._call.inputValues[7].value.toAddress();
  }
}

export class BuyAndTransferCall__Outputs {
  _call: BuyAndTransferCall;

  constructor(call: BuyAndTransferCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class OfferAndMintCall extends ethereum.Call {
  get inputs(): OfferAndMintCall__Inputs {
    return new OfferAndMintCall__Inputs(this);
  }

  get outputs(): OfferAndMintCall__Outputs {
    return new OfferAndMintCall__Outputs(this);
  }
}

export class OfferAndMintCall__Inputs {
  _call: OfferAndMintCall;

  constructor(call: OfferAndMintCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get uri(): string {
    return this._call.inputValues[3].value.toString();
  }

  get mintIndex(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }

  get contractAddress(): Address {
    return this._call.inputValues[8].value.toAddress();
  }
}

export class OfferAndMintCall__Outputs {
  _call: OfferAndMintCall;

  constructor(call: OfferAndMintCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class OfferAndTransferCall extends ethereum.Call {
  get inputs(): OfferAndTransferCall__Inputs {
    return new OfferAndTransferCall__Inputs(this);
  }

  get outputs(): OfferAndTransferCall__Outputs {
    return new OfferAndTransferCall__Outputs(this);
  }
}

export class OfferAndTransferCall__Inputs {
  _call: OfferAndTransferCall;

  constructor(call: OfferAndTransferCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get contractAddress(): Address {
    return this._call.inputValues[7].value.toAddress();
  }
}

export class OfferAndTransferCall__Outputs {
  _call: OfferAndTransferCall;

  constructor(call: OfferAndTransferCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawStoredInAccountCall extends ethereum.Call {
  get inputs(): WithdrawStoredInAccountCall__Inputs {
    return new WithdrawStoredInAccountCall__Inputs(this);
  }

  get outputs(): WithdrawStoredInAccountCall__Outputs {
    return new WithdrawStoredInAccountCall__Outputs(this);
  }
}

export class WithdrawStoredInAccountCall__Inputs {
  _call: WithdrawStoredInAccountCall;

  constructor(call: WithdrawStoredInAccountCall) {
    this._call = call;
  }
}

export class WithdrawStoredInAccountCall__Outputs {
  _call: WithdrawStoredInAccountCall;

  constructor(call: WithdrawStoredInAccountCall) {
    this._call = call;
  }
}
